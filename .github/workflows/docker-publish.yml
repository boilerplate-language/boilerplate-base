name: Docker Publish

on:
  push:
    tags:
      - v*.*.*
  workflow_call:
  workflow_dispatch: # for debug

permissions: read-all

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  dockerize:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write
    needs: release
    steps:
      - name: Checkout repository
        uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3

      - name: Install cosign
        uses: sigstore/cosign-installer@c3667d99424e7e6047999fb6246c0da843953c65
        with:
          cosign-release: "v1.9.0"

      - name: Setup QEMU environment
        uses: docker/setup-qemu-action@e81a89b1732b9c48d79cd809d8d81d79c4647a18

      - name: Setup buildx environment
        uses: docker/setup-buildx-action@4b4e9c3e2d4531116a6f8ba8e71fc6e2cb6e6c8c

      - name: Login to registry ${{ env.REGISTRY }}
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract container metadata
        id: meta
        uses: docker/metadata-action@507c2f2dc502c992ad446e3d7a5dfbe311567a96
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push container
        id: build-and-push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64

      - name: Sign container
        env:
          COSIGN_EXPERIMENTAL: "true"
        run: cosign sign ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ steps.build-and-push.outputs.digest }}

      - name: Publish container SBOM to release asset
        uses: anchore/sbom-action@07978da4bdb4faa726e52dfc6b1bed63d4b56479
        with:
          image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ steps.build-and-push.outputs.digest }}
          registry-username: ${{ github.actor }}
          registry-password: ${{ secrets.GITHUB_TOKEN }}
          format: spdx-json
          artifact-name: sbom.spdx.json

      - name: Publish container SBOM to registry
        env:
          COSIGN_EXPERIMENTAL: "true"
        run: cosign attach sbom --sbom sbom.spdx.json ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ steps.build-and-push.outputs.digest }}
